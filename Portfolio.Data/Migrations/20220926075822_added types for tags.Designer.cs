// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio.Data;

#nullable disable

namespace Portfolio.Data.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20220926075822_added types for tags")]
    partial class addedtypesfortags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("ExperienceTag", b =>
                {
                    b.Property<int>("ExperiencesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExperiencesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ExperienceTag");

                    b.HasData(
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 1
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 2
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 3
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 4
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 6
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 7
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 9
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 10
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 11
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 12
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 13
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 14
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 15
                        },
                        new
                        {
                            ExperiencesId = 1,
                            TagsId = 16
                        });
                });

            modelBuilder.Entity("Portfolio.Data.Entities.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Binnen Sogeti heb ik een specialisatieopleiding gevolgd. Hier heb ik gewerkt aan de backend van een onboardingsapp voor nieuwe medewerkers. Het doel van de onboardingsapp is een takenlijst en algemene informatie tonen zodat nieuwe medewerkers weten wat van hen wordt verwacht en waar ze informatie kunnen vinden.\r\n\r\nIn dit project was ik verantwoordelijk voor het opzetten van een Restful API gemaakt in ASP .Net Core welke geconsumeerd werden door een React Native mobiele app en een Angular dashboard applicatie. Daarnaast heb ik gewerkt aan de frontend van het Angular dashboard.\r\n",
                            ImageName = "c1bf47f0ecce9864a6d5e4651ef11782.jpg",
                            Name = "Basisopleiding Sogeti",
                            StartedAt = new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Portfolio.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearStarted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#",
                            Type = 0,
                            YearStarted = 2017
                        },
                        new
                        {
                            Id = 2,
                            Name = "HTML5",
                            Type = 0,
                            YearStarted = 2016
                        },
                        new
                        {
                            Id = 3,
                            Name = "CSS3",
                            Type = 0,
                            YearStarted = 2016
                        },
                        new
                        {
                            Id = 4,
                            Name = "Typescript",
                            Type = 0,
                            YearStarted = 2021
                        },
                        new
                        {
                            Id = 5,
                            Name = ".Net Framework",
                            Type = 1,
                            YearStarted = 2017
                        },
                        new
                        {
                            Id = 6,
                            Name = ".Net Core",
                            Type = 1,
                            YearStarted = 2019
                        },
                        new
                        {
                            Id = 7,
                            Name = "Angular",
                            Type = 1,
                            YearStarted = 2021
                        },
                        new
                        {
                            Id = 8,
                            Name = "Blazor",
                            Type = 1,
                            YearStarted = 2022
                        },
                        new
                        {
                            Id = 9,
                            Name = "ASP .Net Core",
                            Type = 1,
                            YearStarted = 2019
                        },
                        new
                        {
                            Id = 10,
                            Name = "RESTful APIs",
                            YearStarted = 2021
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bootstrap",
                            Type = 1,
                            YearStarted = 2017
                        },
                        new
                        {
                            Id = 12,
                            Name = "Visual Studio",
                            Type = 2,
                            YearStarted = 2015
                        },
                        new
                        {
                            Id = 13,
                            Name = "Visual Studio Code",
                            Type = 2,
                            YearStarted = 2017
                        },
                        new
                        {
                            Id = 14,
                            Name = "Nuget",
                            Type = 2,
                            YearStarted = 2015
                        },
                        new
                        {
                            Id = 15,
                            Name = "Entity Framework",
                            Type = 2,
                            YearStarted = 2019
                        },
                        new
                        {
                            Id = 16,
                            Name = "npm",
                            Type = 2,
                            YearStarted = 2020
                        });
                });

            modelBuilder.Entity("ExperienceTag", b =>
                {
                    b.HasOne("Portfolio.Data.Entities.Experience", null)
                        .WithMany()
                        .HasForeignKey("ExperiencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfolio.Data.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
